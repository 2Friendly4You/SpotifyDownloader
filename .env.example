# This is an example environment file.
# Copy this file to .env and fill in your actual values.
# Lines starting with # are comments.

# --- Application (spotifydownloader-app) ---

# Flask Secret Key: A strong, random string used for session security.
# Generate a secure key, e.g., using Python: import secrets; secrets.token_hex(32)
FLASK_SECRET_KEY=your_strong_random_secret_key_here

# Admin Panel Password: Set a strong password for accessing the admin panel.
ADMIN_PASSWORD=your_secure_admin_password_here

# Maximum number of concurrent download requests allowed.
# Default: 5
# Note: This can also be configured via the Admin Panel, which will override this .env value if set.
MAX_PENDING_REQUESTS=5

# Flask application entry point (usually fixed, but documented here)
# Default: app.py (as set in docker-compose.yml)
# FLASK_APP=app.py

# Flask environment (usually fixed, but documented here)
# Default: production (as set in docker-compose.yml)
# FLASK_ENV=production


# --- Cleanup Service (spotifydownloader-cleanup) ---

# Retention period in days for downloaded files before they are deleted by the age-based cleanup.
# Default: 14
CLEANUP_RETENTION_DAYS=14

# Interval in seconds for how often the age-based cleanup task runs.
# Default: 86400 (24 hours)
AGE_CLEANUP_INTERVAL=86400

# Maximum size of the music directory in Megabytes (MB).
# Set to 0 to disable size-based cleanup.
# Default: 0 (disabled)
MAX_MUSIC_DIR_SIZE_MB=0

# Target percentage of MAX_MUSIC_DIR_SIZE_MB to reach after size-based cleanup.
# For example, if MAX_MUSIC_DIR_SIZE_MB is 1000 and this is 90, cleanup will
# try to bring the directory size down to 900MB.
# Default: 90
CLEANUP_TARGET_PERCENTAGE=90

# Interval in seconds for how often the size-based cleanup task checks the directory size.
# Default: 3600 (1 hour)
SIZE_CHECK_INTERVAL=3600
